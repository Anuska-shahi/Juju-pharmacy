/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package juju.pharmacy;
import java.sql.*;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author user
 */
public class medicine extends javax.swing.JPanel {

    /** Creates new form customer */
    public medicine() {
        initComponents();
        AutoCompleteDecorator.decorate(supplier_name);
        sdata_load();
        tb_load();
    }
    java.util.Date exp_date,ent_date;
    java.sql.Date expiry,entry;
    public void sdata_load(){
        try{
            Statement s=db.mycon().createStatement();
            ResultSet rs=s.executeQuery("SELECT * FROM supplier");
            Vector v=new Vector(); 
            while(rs.next()){ 
                v.add(rs.getString("name"));
                DefaultComboBoxModel com=new DefaultComboBoxModel(v);
                supplier_name.setModel(com);
                s_id.setText("1");
            }
            s.close();
            db.mycon().close();
        }catch(Exception e){
            System.out.println(e);
        }
    }
    public String sup_id(String id){
        String name="";
        try{
            Statement s=db.mycon().createStatement();
            ResultSet rs=s.executeQuery("SELECT * FROM supplier where id="+id);
            if(rs.next())
                name = rs.getString(2);
            s.close();
            db.mycon().close();
        }catch(Exception e){
            System.out.println(e);
        }
        
        return name;
    }
    public void tb_load(){
        try{
            DefaultTableModel dt= (DefaultTableModel) jTable1.getModel();
            dt.setRowCount(0);
            
            Statement s=db.mycon().createStatement();
            ResultSet rs=s.executeQuery("SELECT * FROM medicine");
            while(rs.next()){
                
                Vector v=new Vector();  
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(sup_id(rs.getString(5)));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                v.add(rs.getString(9));
                v.add(rs.getString(11));
                v.add(rs.getString(10));
                dt.addRow(v);
            }
            s.close();
            db.mycon().close();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }
    public void tb_load(String sql){
        try{
            DefaultTableModel dt= (DefaultTableModel) jTable1.getModel();
            dt.setRowCount(0);
            Statement s=db.mycon().createStatement();
            ResultSet rs=s.executeQuery(sql);
            while(rs.next()){
                Vector v=new Vector();  
                v.add(rs.getString(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(sup_id(rs.getString(5)));
                v.add(rs.getString(6));
                v.add(rs.getString(7));
                v.add(rs.getString(8));
                v.add(rs.getString(9));
                v.add(rs.getString(11));
                v.add(rs.getString(10));
                dt.addRow(v);
            }
            s.close();
            db.mycon().close();
        }
        catch(Exception e){
            System.out.println(e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender_grp = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        search = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        batch_no = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        market_price = new javax.swing.JTextField();
        cost_price = new javax.swing.JTextField();
        brand_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        generic_name = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        company_name = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        supplier_name = new javax.swing.JComboBox<>();
        expiry_date = new com.toedter.calendar.JDateChooser();
        entry_date = new com.toedter.calendar.JDateChooser();
        s_id = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Brand Name :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Cost Price :");

        save.setBackground(new java.awt.Color(255, 255, 255));
        save.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/juju/pharmacy/img/saves.png"))); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/juju/pharmacy/img/searchs.jpg"))); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/juju/pharmacy/img/edits.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/juju/pharmacy/img/deletes.png"))); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Market price :");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("Batch No.  :");

        batch_no.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        batch_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batch_noActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setText("Expiry Date :");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Supplier :");

        market_price.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        market_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                market_priceActionPerformed(evt);
            }
        });

        cost_price.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cost_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cost_priceActionPerformed(evt);
            }
        });

        brand_name.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        brand_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brand_nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Medicine Info :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setText("Product Id :");

        id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Generic Name :");

        generic_name.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        generic_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generic_nameActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setText("Company Name :");

        company_name.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        company_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                company_nameActionPerformed(evt);
            }
        });

        quantity.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setText("Quantity :");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*Entry Date :");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 51));
        jLabel13.setText("(* Not Compulsory)");

        supplier_name.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        supplier_name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        supplier_name.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                supplier_nameItemStateChanged(evt);
            }
        });
        supplier_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplier_nameActionPerformed(evt);
            }
        });

        expiry_date.setBackground(new java.awt.Color(255, 255, 255));
        expiry_date.setDateFormatString("yyyy-MM-dd");
        expiry_date.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        expiry_date.setMinSelectableDate(new java.util.Date(-62135786593000L));

        entry_date.setBackground(new java.awt.Color(255, 255, 255));
        entry_date.setDateFormatString("yyyy-MM-dd");
        entry_date.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        entry_date.setMinSelectableDate(new java.util.Date(-62135786593000L));

        s_id.setEditable(false);
        s_id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        s_id.setText("ID");

        clear.setBackground(new java.awt.Color(255, 255, 255));
        clear.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/juju/pharmacy/img/clears.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(17, 17, 17)
                        .addComponent(s_id, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(brand_name)
                                    .addComponent(id)
                                    .addComponent(generic_name)
                                    .addComponent(company_name)
                                    .addComponent(quantity)
                                    .addComponent(supplier_name, 0, 191, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cost_price, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(market_price, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(batch_no, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel13))
                                    .addComponent(expiry_date, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(entry_date, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                                .addComponent(clear))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(save)
                                .addGap(12, 12, 12)
                                .addComponent(search)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(update)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delete)))
                        .addContainerGap())))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {batch_no, entry_date, expiry_date});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(clear))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(brand_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(generic_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(company_name, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(s_id)
                                            .addComponent(supplier_name, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cost_price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(market_price, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(batch_no, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(29, 29, 29)
                                .addComponent(jLabel7))
                            .addComponent(expiry_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addComponent(jLabel12))
                    .addComponent(entry_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(search)
                    .addComponent(update)
                    .addComponent(delete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {batch_no, entry_date, expiry_date});

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Product Id", "Brand Name", "Generic Name", "Company Name", "Supplier", "Quantity", "Cost Price", "Market Price", "Batch no", "Expiry Date", "Entry Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFillsViewportHeight(true);
        jTable1.setRowHeight(25);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 971, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String sql="SELECT * FROM medicine";
        String pid= id.getText();
        String brand= brand_name.getText();
        String generic= generic_name.getText();
        String company= company_name.getText();
        String qty= quantity.getText();
        String cp= cost_price.getText();
        String mp= market_price.getText();
        String btch= batch_no.getText();
        String sup_id= s_id.getText();
        int flag=0;
        try{
            exp_date=expiry_date.getDate();
            expiry= new java.sql.Date(exp_date.getTime());
            ent_date=entry_date.getDate();
            entry= new java.sql.Date(ent_date.getTime());
        }catch(Exception e){
            System.out.println(e);
        }
        if(id.getText().isEmpty()||batch_no.getText().isEmpty()){
            try{
                if(!id.getText().isEmpty()){
                    if (flag==0){
                      sql=sql+" where product_id="+pid;
                      flag=1;
                  }else{
                      sql=sql+" OR product_id="+pid;
                  }    
              }
                if(!brand_name.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where brand_name LIKE'"+brand+"%'";
                      flag=1;
                  }else{
                      sql=sql+" OR brand_name LIKE'"+brand+"%'";
                  }     
              }
              if(!generic_name.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where generic_name LIKE'"+generic+"%'";
                      flag=1;
                  }else{
                      sql=sql+" OR generic_name LIKE'"+generic+"%'";
                  }     
              }
              if(!company_name.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where company LIKE'"+company+"%'";
                      flag=1;
                  }else{
                      sql=sql+" OR company LIKE'"+company+"%'";
                  }     
              }
              if(!quantity.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where quantity>="+qty;
                      flag=1;
                  }else{
                      sql=sql+" OR quantity>="+qty;
                  }     
              }
              if(!cost_price.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where cost_price>="+cp;
                      flag=1;
                  }else{
                      sql=sql+" OR cost_price>="+cp;
                  }     
              }
              if(!market_price.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where market_price>="+mp;
                      flag=1;
                  }else{
                      sql=sql+" OR market_price>="+mp;
                  }     
              }
              if(!batch_no.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where batch_no='"+btch+"'";
                      flag=1;
                  }else{
                      sql=sql+" OR batch_no='"+btch+"'";
                  }     
              }
              if(entry!=null){
                  if (flag==0){
                      sql=sql+" where entry_date>='"+entry+"'";
                      flag=1;
                  }else{
                      sql=sql+" OR entry_date>='"+entry+"'";
                  }     
              }
              if(expiry!=null){
                  if (flag==0){
                      sql=sql+" where expiry_date>='"+expiry+"'";
                      flag=1;
                  }else{
                      sql=sql+" OR expiry_date>='"+expiry+"'";
                  }     
              }
              if(!s_id.getText().isEmpty()){
                  if (flag==0){
                      sql=sql+" where supplier_id ="+sup_id;
                      flag=1;
                  }else{
                      Object[] options = {"All","Filter","Exclude"};
                      int dialogResult=JOptionPane.showOptionDialog(null, "Do you want to filter by selected supplier?","Filter",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,null,options,options[0]);
                      if(dialogResult==JOptionPane.YES_OPTION)
                        sql=sql+" OR supplier_id ="+sup_id;
                      else if(dialogResult==JOptionPane.NO_OPTION)
                        sql=sql+" AND supplier_id ="+sup_id;
                  }   
              }
            }catch(Exception e){
                 System.out.println(e);
            } 
        }else{
            try{
                Statement s=db.mycon().createStatement();
                ResultSet rs=s.executeQuery("SELECT * FROM medicine WHERE product_id="+pid+" AND batch_no='"+btch+"'");
                if(rs.next()){
                    brand_name.setText(rs.getString(2));
                    generic_name.setText(rs.getString(3));
                    company_name.setText(rs.getString(4));
                    supplier_name.setSelectedItem(rs.getString(5));
                    quantity.setText(rs.getString(6));
                    cost_price.setText(rs.getString(7));
                    market_price.setText(rs.getString(8));
                    ((JTextField)expiry_date.getDateEditor().getUiComponent()).setText(rs.getString(11));
                    ((JTextField)entry_date.getDateEditor().getUiComponent()).setText(rs.getString(10));
                    sql=sql+" where product_id="+pid+" AND batch_no='"+btch+"'";
                }
                else{
                    JOptionPane.showMessageDialog(null, "Product Id of given batch no. not found");
                    brand_name.setText("");
                    generic_name.setText("");
                    company_name.setText("");
                    supplier_name.setSelectedIndex(0);
                    quantity.setText("");
                    cost_price.setText("");
                    market_price.setText("");
                    ((JTextField)expiry_date.getDateEditor().getUiComponent()).setText("");
                    ((JTextField)entry_date.getDateEditor().getUiComponent()).setText("");
                }
                 s.close();
                 db.mycon().close();
            }catch(Exception e){
                 System.out.println(e);
            }  
        }
        tb_load(sql);
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        String pid= id.getText();
        String brand= brand_name.getText();
        String generic= generic_name.getText();
        String company= company_name.getText();
        String qty= quantity.getText();
        String cp= cost_price.getText();
        String mp= market_price.getText();
        String btch= batch_no.getText();
        String sup_id= s_id.getText();
        try{
            exp_date=expiry_date.getDate();
            expiry= new java.sql.Date(exp_date.getTime());
            ent_date=entry_date.getDate();
            entry= new java.sql.Date(ent_date.getTime());
        }catch(Exception e){
            System.out.println(e);
        }
        
        if(id.getText().isEmpty()||brand_name.getText().isEmpty()||generic_name.getText().isEmpty()||company_name.getText().isEmpty()||quantity.getText().isEmpty()||cost_price.getText().isEmpty()||market_price.getText().isEmpty()||batch_no.getText().isEmpty()||s_id.getText().isEmpty()||expiry==null){
            JOptionPane.showMessageDialog(null, "Missing Information");
        }else{
            try{
                Statement s=db.mycon().createStatement();
                int result=s.executeUpdate("UPDATE medicine set brand_name='"+brand+"', generic_name='"+generic+"', company='"+company+"', supplier_id="+sup_id+", quantity="+qty+", cost_price="+cp+", market_price="+mp+",expiry_date= '"+expiry+"',entry_date='"+entry+"' where product_id="+pid+" AND batch_no='"+btch+"'");
                if(result!=-1){
                       JOptionPane.showMessageDialog(null, "Medicine updated successfully");
                }else{
                       JOptionPane.showMessageDialog(null, "Error occured");
                   }
                s.close();
                db.mycon().close();
            }catch(Exception e){
                System.out.println(e);
            }
        }
        tb_load();
    }//GEN-LAST:event_updateActionPerformed

    private void batch_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batch_noActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_batch_noActionPerformed

    private void market_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_market_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_market_priceActionPerformed

    private void cost_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cost_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cost_priceActionPerformed

    private void brand_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brand_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brand_nameActionPerformed

    private void generic_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generic_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generic_nameActionPerformed

    private void company_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_company_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_company_nameActionPerformed

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void supplier_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplier_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplier_nameActionPerformed

    private void supplier_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_supplier_nameItemStateChanged
        // TODO add your handling code here:
        try{
            Statement s=db.mycon().createStatement();
            ResultSet rs=s.executeQuery("SELECT id FROM supplier where name='"+supplier_name.getSelectedItem()+"'");
            while(rs.next()){ 
                s_id.setText(rs.getString("id"));
            }
            s.close();
            db.mycon().close();
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_supplier_nameItemStateChanged

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String pid= id.getText();
        String brand= brand_name.getText();
        String generic= generic_name.getText();
        String company= company_name.getText();
        String qty= quantity.getText();
        String cp= cost_price.getText();
        String mp= market_price.getText();
        String btch= batch_no.getText();
        String sup_id= s_id.getText();
        try{
            exp_date=expiry_date.getDate();
            expiry= new java.sql.Date(exp_date.getTime());
            ent_date=entry_date.getDate();
            entry= new java.sql.Date(ent_date.getTime());
        }catch(Exception e){
            System.out.println(e);
        }
        
        if(id.getText().isEmpty()||brand_name.getText().isEmpty()||generic_name.getText().isEmpty()||company_name.getText().isEmpty()||quantity.getText().isEmpty()||cost_price.getText().isEmpty()||market_price.getText().isEmpty()||batch_no.getText().isEmpty()||s_id.getText().isEmpty()||expiry==null){
            JOptionPane.showMessageDialog(null, "Missing Information");
        }else{
            try{
                Statement s=db.mycon().createStatement();
                int result=s.executeUpdate("INSERT INTO medicine VALUES("+pid+",'"+brand+"','"+generic+"','"+company+"',"+sup_id+","+qty+","+cp+","+mp+",'"+btch+"','"+expiry+"','"+entry+"')");
                if(result!=-1){
                       JOptionPane.showMessageDialog(null, "Medicine added successfully");
                       tb_load();
                }else{
                       JOptionPane.showMessageDialog(null, "Error occured");
                   }
                s.close();
                db.mycon().close();
            }catch(Exception e){
                System.out.println(e);
            }
        }
        
    }//GEN-LAST:event_saveActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        id.setText("");
        brand_name.setText("");
        generic_name.setText("");
        company_name.setText("");
        supplier_name.setSelectedIndex(0);
        quantity.setText("");
        cost_price.setText("");
        market_price.setText("");
        batch_no.setText("");
        ((JTextField)expiry_date.getDateEditor().getUiComponent()).setText("");
        ((JTextField)entry_date.getDateEditor().getUiComponent()).setText("");
        tb_load();
    }//GEN-LAST:event_clearActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int r= jTable1.getSelectedRow();
        String pid=jTable1.getValueAt(r, 0).toString();
        String brand= jTable1.getValueAt(r, 1).toString();
        String generic= jTable1.getValueAt(r, 2).toString();
        String company= jTable1.getValueAt(r, 3).toString();
        String sup_name= jTable1.getValueAt(r, 4).toString();
        String qty= jTable1.getValueAt(r, 5).toString();
        String cp= jTable1.getValueAt(r, 6).toString();
        String mp= jTable1.getValueAt(r, 7).toString();
        String btch= jTable1.getValueAt(r, 8).toString();
        String exp= jTable1.getValueAt(r, 9).toString();
        String ent= jTable1.getValueAt(r, 10).toString();
        id.setText(pid);
        brand_name.setText(brand);
        generic_name.setText(generic);
        company_name.setText(company);
        supplier_name.setSelectedItem(sup_name);
        quantity.setText(qty);
        cost_price.setText(cp);
        market_price.setText(mp);
        batch_no.setText(btch);
        ((JTextField)expiry_date.getDateEditor().getUiComponent()).setText(exp);
        ((JTextField)entry_date.getDateEditor().getUiComponent()).setText(ent);
    }//GEN-LAST:event_jTable1MouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        String pid=id.getText();
        String btch=batch_no.getText();
        int dialogResult=JOptionPane.showConfirmDialog(null,"Do you want to delete record of product id="+pid+" of batch="+btch,"Confirmation",JOptionPane.YES_NO_OPTION );
        if(!id.getText().isEmpty()&& !id.getText().isEmpty()&& dialogResult==JOptionPane.YES_OPTION){
            try{
              Statement s=db.mycon().createStatement();
              int result=s.executeUpdate("DELETE FROM medicine where  product_id="+pid+" AND batch_no='"+btch+"'");
              if(result>0){
                     JOptionPane.showMessageDialog(null, "Medicine Deleted successfully");
              }else{
                  if(result==0)   
                    JOptionPane.showMessageDialog(null, "Product Id of given batch no. not found");
                  
                  else
                      JOptionPane.showMessageDialog(null, "Error occured");
                 }
               s.close();
               db.mycon().close();
            }catch(Exception e){
                 System.out.println(e);
                 JOptionPane.showMessageDialog(null, "This mediciner data may be link with other data");
            }  
        }
        tb_load();
    }//GEN-LAST:event_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField batch_no;
    private javax.swing.JTextField brand_name;
    private javax.swing.JButton clear;
    private javax.swing.JTextField company_name;
    private javax.swing.JTextField cost_price;
    private javax.swing.JButton delete;
    private com.toedter.calendar.JDateChooser entry_date;
    private com.toedter.calendar.JDateChooser expiry_date;
    private javax.swing.ButtonGroup gender_grp;
    private javax.swing.JTextField generic_name;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField market_price;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField s_id;
    private javax.swing.JButton save;
    private javax.swing.JButton search;
    private javax.swing.JComboBox<String> supplier_name;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

}
